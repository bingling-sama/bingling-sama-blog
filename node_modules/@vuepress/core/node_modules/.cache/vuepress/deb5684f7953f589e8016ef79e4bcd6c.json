{"remainingRequest":"E:\\bingling-sama-blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\bingling-sama-blog\\node_modules\\vuepress-theme-modern-blog\\src\\components\\SearchBox.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"E:\\bingling-sama-blog\\node_modules\\vuepress-theme-modern-blog\\src\\components\\SearchBox.vue","mtime":1609037243858},{"path":"E:\\bingling-sama-blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1608470252837},{"path":"E:\\bingling-sama-blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1608905605904},{"path":"E:\\bingling-sama-blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1608470256619},{"path":"E:\\bingling-sama-blog\\node_modules\\stylus-loader\\index.js","mtime":1608470259860},{"path":"E:\\bingling-sama-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1608470252416},{"path":"E:\\bingling-sama-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1608905605904}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNlYXJjaC13cmFwcGVyIHsKICAuZWwtaW5wdXRfX2lubmVyIHsKICAgIGhlaWdodDogMnJlbSAhaW1wb3J0YW50OwogIH0KCiAgLnNlYXJjaC13cmFwcGVyIGlucHV0IHsKICAgIHdpZHRoOiAxNjBweDsKICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7CiAgfQoKICAuZWwtYXV0b2NvbXBsZXRlLXN1Z2dlc3Rpb25fX3dyYXAsIC5lbC1hdXRvY29tcGxldGUtc3VnZ2VzdGlvbiB7CiAgICB3aWR0aDogMTAwJTsKICB9CgogIC5lbC1pbnB1dF9fc3VmZml4IHsKICAgIGxpbmUtaGVpZ2h0OiAycmVtOwogIH0KfQoKLmNvbXBvbmVudHMtc2VhcmNoIHsKICB3aWR0aDogMzByZW0gIWltcG9ydGFudDsKfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkTVFNb2JpbGUpIHsKICAuY29tcG9uZW50cy1zZWFyY2ggewogICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwcHgpICFpbXBvcnRhbnQ7CiAgfQp9Cg=="},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SearchBox.vue","sourceRoot":"node_modules/vuepress-theme-modern-blog/src/components","sourcesContent":["<template>\n  <div class=\"search-wrapper u-px3 d-flex align-items-center\">\n    <el-autocomplete\n      ref=\"searchInput\"\n      slot=\"reference\"\n      v-model=\"query\"\n      size=\"small\"\n      :fetch-suggestions=\"querySearchAsync\"\n      :placeholder=\"$t('search_placeholder')\"\n      popper-class=\"components-search\"\n      :trigger-on-focus=\"false\"\n      placement=\"bottom-end\"\n      :debounce=\"200\"\n      @select=\"handleSelect\"\n    >\n      <template slot-scope=\"props\">\n        <!-- eslint-disable-next-line -->\n        <li role=\"option\" v-html=\"props.item.value\"/>\n      </template>\n    </el-autocomplete>\n  </div>\n</template>\n\n<script>\nimport Flexsearch from 'flexsearch'\n\nexport default {\n  data () {\n    return {\n      index: null,\n      query: '',\n    }\n  },\n  mounted () {\n    this.index = new Flexsearch({\n      tokenize: 'forward',\n      doc: {\n        id: 'key',\n        field: ['title', 'content'],\n      },\n    })\n    const { pages } = this.$site\n    this.index.add(pages)\n  },\n  methods: {\n    querySearchAsync (queryString, cb) {\n      const { themeConfig } = this.$site\n      const query = queryString.trim().toLowerCase()\n      const usingGoogleSearch =\n        themeConfig.googleCustomSearchEngineID && themeConfig.googleAPIKey\n      const max = themeConfig.searchMaxSuggestions || 20\n      if (this.index === null || query.length < 1) {\n        // eslint-disable-next-line\n        return cb([])\n      }\n      this.index.search(\n        query,\n        {\n          limit: max,\n          threshold: 4,\n          encode: 'extra',\n        },\n        result => {\n          if (result.length) {\n            const resolvedResult = result.map(page => {\n              return {\n                link: page.path,\n                value: this.getQuerySnippet(page),\n              }\n            })\n            return cb(resolvedResult)\n          } else {\n            if (usingGoogleSearch) {\n              // eslint-disable-next-line\n              return cb([\n                {\n                  value: this.$t('search_entire_site', { query }),\n                  link: `/search?q=${query}`,\n                },\n              ])\n            } else {\n              // eslint-disable-next-line\n              cb([{ value: this.$t('no_results'), link: '' }])\n            }\n          }\n        },\n      )\n    },\n    getQuerySnippet (page) {\n      const queryPosition = page.content.toLowerCase().indexOf(this.query)\n      const startIndex = queryPosition - 20 < 0 ? 0 : queryPosition - 20\n      const endIndex = queryPosition + 30\n      const querySnippet = page.content\n        .slice(startIndex, endIndex)\n        .toLowerCase()\n        .replace(\n          this.query,\n          `<strong class=\"text--primary\">${this.query}</strong>`,\n        )\n        .split(' ')\n        .slice(1, -1)\n        .join(' ')\n      if (querySnippet) {\n        return `\n        <strong class=\"text--primary\">${page.title}</strong>\\n\n        <div class=\"text-muted pl-2\"> ${querySnippet} ..</div>`\n          .replace(/\\|/g, ' ')\n          .replace(/:::/g, ' ')\n      } else {\n        return page.title\n      }\n    },\n    handleSelect (item) {\n      if (item.link) {\n        this.$router.push(item.link)\n      }\n      this.query = ''\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\">\n.search-wrapper {\n  .el-input__inner {\n    height: 2rem !important;\n  }\n\n  .search-wrapper input {\n    width: 160px;\n    transition: all 0.5s ease;\n  }\n\n  .el-autocomplete-suggestion__wrap, .el-autocomplete-suggestion {\n    width: 100%;\n  }\n\n  .el-input__suffix {\n    line-height: 2rem;\n  }\n}\n\n.components-search {\n  width: 30rem !important;\n}\n\n@media only screen and (max-width: $MQMobile) {\n  .components-search {\n    width: calc(100% - 10px) !important;\n  }\n}\n</style>\n"]}]}